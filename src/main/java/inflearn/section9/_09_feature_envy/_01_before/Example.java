package inflearn.section9._09_feature_envy._01_before;

/**
 * 냄새9. 기능 편애
 *
 * 어떤 모듈에 있는 함수가 다른 모듈에 있는 데이터나 함수를 더 많이 참조하는 경우에 발생한다.
 * => 즉 다른 모듈의 참조를 너무많이 사용한다면 그함수의 위치가 적절치 않을수도있다.
 *   ex) 다른 객체의 getter 를 여러개 사용하는 메소드
 *
 * 관련 리팩토링 기술
 *   함수 옮기기를 사용해서 함수를 적절한 위치로 옮긴다.
 *   함수의 일부분만 다른 곳의 데이터와 함수를 많이 참조한다면 함수 추출하기로 함수를 나눈 다음에 함수를 옮길 수 있다.
 *
 * 만약에 여러 모듈을 참조하고 있다면? 그중에서 가장 많은 데이터를 참조하는 곳으로 옮기거나, 함수를 여러개로 쪼개서
 * 각 모듈로 분산 시킬 수도 있다.
 *
 * -> 데이터와 해당 데이터를 참조하는 행동을 같은곳에 두도록 하자.
 * 사실 여기서 더 추가적인 리팩토링기술은없다
 * 함수옮기기 이런것정도를 사용하여 리팩토링을 해보자.
 */
public class Example {
}
